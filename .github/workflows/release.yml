name: Release

on:
  push:
    branches: [main]

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      # Checkout code
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for release-please
          token: ${{ secrets.GITHUB_TOKEN }}
      
      # Run release-please to create/update release PR
      - name: Release Please
        uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-type: node
          package-name: schmock
          
      # If a release was created, build and publish
      - name: Setup Node.js
        if: ${{ steps.release.outputs.release_created }}
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Setup Bun
        if: ${{ steps.release.outputs.release_created }}
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.1.38
      
      - name: Install dependencies
        if: ${{ steps.release.outputs.release_created }}
        run: bun install --frozen-lockfile
      
      - name: Build packages
        if: ${{ steps.release.outputs.release_created }}
        run: bun run build
      
      - name: Run tests
        if: ${{ steps.release.outputs.release_created }}
        run: bun test
      
      # Publish to npm if release was created
      - name: Publish to npm
        if: ${{ steps.release.outputs.release_created }}
        run: |
          echo "Publishing version ${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}"
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      # Optional: Tag the release
      - name: Tag release
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git tag -a v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }} -m "Release v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}"
          git push origin v${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor }}.${{ steps.release.outputs.patch }}